/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */


@interface TextFieldEditor : NSTextView
{
    BOOL _pasteReplacesLineEndingsWithSpaces;
}

- (id)init;
- (BOOL)pasteReplacesLineEndingsWithSpaces;
- (void)setPasteReplacesLineEndingsWithSpaces:(BOOL)fp8;
- (void)replaceCarriageReturnsAfterPaste;
- (void)paste:(id)fp8;
- (void)pasteAsPlainText:(id)fp8;

@end

@interface LocationFieldEditor : TextFieldEditor
{
@public
    NSTextField *field;
}

- (id)initWithField:(id)fp8;
- (unsigned int)validModesForFontPanel:(id)fp8;
- (void)changeFont:(id)fp8;
- (id)acceptableDragTypes;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (void)smartInsertForString:(id)fp8 replacingRange:(struct _NSRange)fp12 beforeString:(id *)fp20 afterString:(id *)fp24;

@end

@interface WindowController : NSWindowController
{
    NSString *_multiWindowFrameAutosaveName;
    BOOL _autosaveFrame;
    BOOL _lastResizeWasProgrammatic;
}

- (void)dealloc;
- (void)_saveFrameIfAllowed;
- (void)windowDidMove:(id)fp8;
- (void)windowDidResize:(id)fp8;
- (void)_safari_windowDidEndLiveResize;
- (void)windowWillClose:(id)fp8;
- (BOOL)setMultiWindowFrameAutosaveName:(id)fp8;
- (id)multiWindowFrameAutosaveName;
- (void)_setFrameWithoutAutosaving:(struct _NSRect)fp8 programmatically:(BOOL)fp24;
- (void)setFrameWithoutAutosaving:(struct _NSRect)fp8;
- (void)setFrameProgrammatically:(struct _NSRect)fp8;
- (BOOL)lastResizeWasProgrammatic;
- (struct _NSRect)defaultFrame;
- (void)setFrameToDefault;
- (void)_windowDidLoad;
- (void)setFrameAutosaveEnabled:(BOOL)fp8;
- (BOOL)frameAutosaveEnabled;

@end


@interface BrowserWindowController : WindowController
{
    id favoritesBarView;	// 48 = 0x30
    NSButton *toggleBookmarksButton;	// 52 = 0x34
    id tabBarView;	// 56 = 0x38
    id tabBarEnclosureView;	// 60 = 0x3c
    NSTabView *tabSwitcher;	// 64 = 0x40
    id statusBar;	// 68 = 0x44
    NSTextField *statusTextField;	// 72 = 0x48
    id _toolbarController;	// 76 = 0x4c
    LocationFieldEditor *_locationFieldEditor;	// 80 = 0x50
    TextFieldEditor *_searchFieldEditor;	// 84 = 0x54
    id _statusStringView;	// 88 = 0x58
    id _URLCompletionController;	// 92 = 0x5c
    id _searchCompletionController;	// 96 = 0x60
    NSMenu *_dynamicBackMenu;	// 100 = 0x64
    NSMenu *_dynamicForwardMenu;	// 104 = 0x68
    BOOL _isLoading;	// 108 = 0x6c
    BOOL _temporaryLocationBar;	// 109 = 0x6d
    BOOL _editedLocationField;	// 110 = 0x6e
    BOOL _editedLocationFieldWhileLoading;	// 111 = 0x6f
    BOOL _focusedLocationFieldWhileLoading;	// 112 = 0x70
    BOOL _tabBarHiddenByJavaScript;	// 113 = 0x71
    BOOL _readyToUpdateKeyboardLoop;	// 114 = 0x72
    NSMutableDictionary *_viewFramesForResizing;	// 116 = 0x74
    BOOL _favoritesBarShowing;	// 120 = 0x78
    BOOL _tabBarShowing;	// 121 = 0x79
    BOOL _statusBarShowing;	// 122 = 0x7a
    BOOL _acceptsGenericIcon;	// 123 = 0x7b
    NSString *_statusText;	// 124 = 0x7c
    BOOL _clearStatus;	// 128 = 0x80
    BOOL _ellipsizeStatus;	// 129 = 0x81
    NSString *_newStatus;	// 132 = 0x84
    BOOL _stopAndReloadButtonWillStop;	// 136 = 0x88
    BOOL _stopAndReloadButtonIsForTopSites;	// 137 = 0x89
    BOOL _tabBarInTransition;	// 138 = 0x8a
    BOOL _tabBarShownForTabDrag;	// 139 = 0x8b
    BOOL _confirmUnsubmittedFormText;	// 140 = 0x8c
    BOOL _isAutoFilling;	// 141 = 0x8d
    BOOL _hideToolbarOnEndSheet;	// 142 = 0x8e
    BOOL _keepTabBarHiddenWhenCreatingTab;	// 143 = 0x8f
    NSTabView *_tabSwitcherForGoBack;	// 144 = 0x90
    NSTabView *_tabSwitcherForGoForward;	// 148 = 0x94
    id _deselectedTab;	// 152 = 0x98
    unsigned int _coalescedUpdateMask;	// 156 = 0x9c
    BOOL _performingCoalescedUpdates;	// 160 = 0xa0
    unsigned int _postponedToolbarUpdateMask;	// 164 = 0xa4
    BOOL _postponeToolbarUpdates;	// 168 = 0xa8
    NSURL *_pendingSearchURL;	// 172 = 0xac
    BOOL _RSSTransitionSlowMotion;	// 176 = 0xb0
    id _RSSTransitionImageView;	// 180 = 0xb4
    NSTimer *_RSSTransitionTimer;	// 184 = 0xb8
    double _RSSTransitionStartTime;	// 188 = 0xbc
    double _RSSTransitionDuration;	// 196 = 0xc4
    BOOL _RSSTransitionInProgress;	// 204 = 0xcc
    BOOL _startRSSAnimationAfterFirstLayout;	// 205 = 0xcd
    id _closedWebViewHolder;	// 208 = 0xd0
    NSTimer *_springToFrontTimer;	// 212 = 0xd4
    NSTimer *_setStatusMessageTimer;	// 216 = 0xd8
    id _pdfLoadingProgressController;	// 220 = 0xdc
}

+ (int)windowPolicyFromEventModifierFlags:(unsigned int)fp8 isMiddleMouseButton:(BOOL)fp12 requireCommandKey:(BOOL)fp16 respectTargetedClicksPreference:(BOOL)fp20;
+ (int)windowPolicyFromEventModifierFlags:(unsigned int)fp8 isMiddleMouseButton:(BOOL)fp12;
+ (int)windowPolicyFromEventModifierFlags:(unsigned int)fp8 requireCommandKey:(BOOL)fp12;
+ (int)windowPolicyFromEventModifierFlags:(unsigned int)fp8 requireCommandKey:(BOOL)fp12 respectTargetedClicksPreference:(BOOL)fp16;
+ (int)windowPolicyFromCurrentEventRequireCommandKey:(BOOL)fp8 respectTargetedClicksPreference:(BOOL)fp12;
+ (int)windowPolicyFromCurrentEvent;
+ (int)windowPolicyFromCurrentEventRequireCommandKey:(BOOL)fp8;
+ (int)windowPolicyFromCurrentEventRespectingKeyEquivalents:(BOOL)fp8;
+ (void)reopen;
- (void)addBookmark:(id)fp8;
- (void)autoFill:(id)fp8;
- (void)changeTextEncoding:(id)fp8;
- (void)closeCurrentTab:(id)fp8;
- (void)closeInactiveTabs:(id)fp8;
- (void)goBackAndFlashToolbarButton:(id)fp8;
- (void)goBack:(id)fp8;
- (void)goBackOrForwardFromSegmentedControl:(id)fp8;
- (void)goForwardAndFlashToolbarButton:(id)fp8;
- (void)goForward:(id)fp8;
- (void)goHome:(id)fp8;
- (void)goToToolbarLocation:(id)fp8;
- (void)zoomIn:(id)fp8;
- (void)zoomOut:(id)fp8;
- (void)zoomInOrOutFromSegmentedControl:(id)fp8;
- (void)zoomToStandardSize:(id)fp8;
- (void)moveCurrentTabToNewWindow:(id)fp8;
- (void)newBookmarkFolder:(id)fp8;
- (void)newTab:(id)fp8;
- (void)performQuickSearch:(id)fp8;
- (void)printFromToolbar:(id)fp8;
- (void)reportBugToApple:(id)fp8;
- (void)selectLocationField:(id)fp8;
- (void)selectNextTab:(id)fp8;
- (void)selectPreviousTab:(id)fp8;
- (void)selectSearchField:(id)fp8;
- (void)stopOrReload:(id)fp8;
- (void)stopLoading:(id)fp8;
- (BOOL)canReloadObeyingLocationField;
- (void)reloadObeyingLocationField:(id)fp8;
- (void)closeTabFromMenu:(id)fp8;
- (void)closeOtherTabsFromMenu:(id)fp8;
- (void)moveTabToNewWindowFromMenu:(id)fp8;
- (void)reloadTabFromMenu:(id)fp8;
- (void)reloadAllTabs:(id)fp8;
- (void)showBookmarksView:(id)fp8;
- (void)showHistoryInBookmarksView:(id)fp8;
- (void)toggleLocationBar:(id)fp8;
- (void)toggleFavoritesBar:(id)fp8;
- (void)toggleStatusBar:(id)fp8;
- (void)toggleShowBookmarks:(id)fp8;
- (void)toggleTabBar:(id)fp8;
- (void)createWebClip:(id)fp8;
- (void)showTopSitesWall:(id)fp8;
- (BOOL)canReloadTab:(id)fp8;
- (BOOL)canReloadAllTabs;
- (BOOL)canCloseSelectedTab;
- (BOOL)canCreateNewTab;
- (BOOL)canShowTopSitesWall;
- (void)noResponderFor:(SEL)fp8;
- (void)cancel:(id)fp8;
- (id)windowNibName;
- (void)windowWillLoad;
- (void)windowDidLoad;
- (void)showWindow:(id)fp8;
- (void)setDocument:(id)fp8;
- (BOOL)shouldCloseDocument;
- (struct _NSRect)defaultFrame;
- (BOOL)isLocationBarVisible;
- (void)setLocationBarVisible:(BOOL)fp8;
- (BOOL)isFavoritesBarVisible;
- (void)setFavoritesBarVisible:(BOOL)fp8;
- (BOOL)isTabBarVisible;
- (void)setTabBarVisible:(BOOL)fp8;
- (BOOL)isStatusBarVisible;
- (void)setStatusBarVisible:(BOOL)fp8;
- (BOOL)anyToolbarsVisible;
- (void)setToolbarsVisible:(BOOL)fp8;
- (struct _NSRect)adjustedFrameForSaving:(struct _NSRect)fp8;
- (struct _NSRect)adjustedFrameForCascade:(struct _NSRect)fp8 fromWindow:(id)fp24;
- (BOOL)isAvailableForForcedLocationUsingWindowPolicy:(int)fp8;
- (BOOL)allowBookmarksChanges;
- (void)editAddressOfFavorite:(id)fp8;
- (void)editContentsOfFavorite:(id)fp8;
- (void)editTitleOfFavorite:(id)fp8;
- (id)favoritesBarView;
- (void)revealFavorite:(id)fp8;
- (void)deleteBookmark:(id)fp8;
- (void)editTitleOfBookmarksCollection:(id)fp8;
- (BOOL)acceptsGenericIcon;
- (void)setAcceptsGenericIcon:(BOOL)fp8;
- (void)setSearchFieldText:(id)fp8;
- (void)_searchForStringWithoutUpdatingRecentSearches:(id)fp8;
- (void)searchForString:(id)fp8;
- (BOOL)toolbarInputFieldsIncludeSearchField;
- (id)dynamicBackMenu;
- (id)dynamicForwardMenu;
- (id)tabBarView;
- (id)orderedTabs;
- (id)orderedTabViewItems;
- (void)insertInOrderedTabViewItems:(id)fp8;
- (void)insertInOrderedTabViewItems:(id)fp8 atIndex:(unsigned int)fp12;
- (void)replaceInOrderedTabViewItems:(id)fp8 atIndex:(unsigned int)fp12;
- (void)removeFromOrderedTabViewItemsAtIndex:(unsigned int)fp8;
- (id)currentWebView;
- (id)selectedTab;
- (unsigned int)selectedTabIndex;
- (id)createTab;
- (id)createTabWithFrameName:(id)fp8;
- (id)createTabWithFrameName:(id)fp8 andShow:(BOOL)fp12 addToRightSide:(BOOL)fp16;
- (id)createInactiveTab;
- (id)createInactiveTabWithFrameName:(id)fp8;
- (id)createTabWithWebView:(id)fp8 andShow:(BOOL)fp12 addToRightSide:(BOOL)fp16;
- (void)selectTab:(id)fp8;
- (void)closeTab:(id)fp8;
- (void)closeTabOrWindow:(id)fp8;
- (void)closeOtherTabs:(id)fp8;
- (void)reloadTabsMatchingURLs:(id)fp8;
- (void)replaceTabURLs:(id)fp8 usingTabLabels:(id)fp12 allowGoBack:(BOOL)fp16;
- (void)replaceEmptyTabWithTabs:(id)fp8;
- (void)moveTabFromOtherWindow:(id)fp8 toIndex:(unsigned int)fp12 andShow:(BOOL)fp16;
- (id)tabsWithUnsubmittedFormText;
- (unsigned int)numberOfNonDisposableTabs;
- (void)updateTabLabelForWebView:(id)fp8;
- (float)tabBarHeight;
- (void)windowTitleNeedsUpdate;
- (void)firstResponderMightHaveChanged;
- (void)willShowCustomizeToolbarSheet;
- (id)windowForSheet;
- (BOOL)isAutoFilling;
- (BOOL)canShowInputFields;
- (id)locationField;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)windowDidBecomeKey:(id)fp8;
- (void)windowDidEndSheet:(id)fp8;
- (void)windowDidResignKey:(id)fp8;
- (void)windowDidBecomeMain:(id)fp8;
- (void)windowDidResignMain:(id)fp8;
- (struct _NSSize)windowWillResize:(id)fp8 toSize:(struct _NSSize)fp12;
- (void)windowDidResize:(id)fp8;
- (void)_safari_windowDidEndLiveResize;
- (void)windowDidMove:(id)fp8;
- (void)windowDidMiniaturize:(id)fp8;
- (void)windowDidDeminiaturize:(id)fp8;
- (struct _NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(struct _NSRect)fp12;
- (void)swipeWithEvent:(id)fp8;
- (BOOL)window:(id)fp8 willHandleKeyEvent:(id)fp12;
- (BOOL)window:(id)fp8 willHandleMouseDownEvent:(id)fp12;
- (struct _NSRect)window:(id)fp8 willPositionSheet:(id)fp12 usingRect:(struct _NSRect)fp16;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (BOOL)windowShouldClose:(id)fp8;
- (void)_tellAppControllerWindowWillClose;
- (void)windowWillClose:(id)fp8;
- (id)browserWindowTitleBarURL:(id)fp8;
- (void)browserWindow:(id)fp8 shouldGoToURL:(id)fp12;
- (void)controlTextDidChange:(id)fp8;
- (void)controlTextDidEndEditing:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (void)locationTextFieldURLDropped:(id)fp8;
- (id)bookmarkTitleForLocationTextField:(id)fp8;
- (BOOL)searchField:(id)fp8 shouldRememberSearchString:(id)fp12;
- (BOOL)searchField:(id)fp8 trackSearchButtonForEvent:(id)fp12 inRect:(struct _NSRect)fp16;
- (void)locationTextFieldPerformStopReloadButtonAction:(id)fp8;
- (void)locationTextFieldPerformRSSButtonAction:(id)fp8;
- (void)locationTextFieldPerformEVCertificateButtonAction:(id)fp8;
- (void)locationTextField:(id)fp8 mouseUpInStopReloadButton:(id)fp12;
- (BOOL)locationTextField:(id)fp8 mouseDownInRSSButton:(id)fp12;
- (void)locationTextField:(id)fp8 mouseUpInRSSButton:(id)fp12;
- (void)locationTextField:(id)fp8 mouseUpInEVCertificateButton:(id)fp12;
- (void)menuNeedsUpdate:(id)fp8;
- (BOOL)menuHasKeyEquivalent:(id)fp8 forEvent:(id)fp12 target:(id *)fp16 action:(SEL *)fp20;
- (unsigned int)morphingDragImage:(id)fp8 draggingEntered:(id)fp12;
- (unsigned int)morphingDragImage:(id)fp8 draggingUpdated:(id)fp12;
- (void)morphingDragImage:(id)fp8 draggingExited:(id)fp12;
- (BOOL)morphingDragImage:(id)fp8 performDragOperation:(id)fp12;
- (void)morphingDragImage:(id)fp8 enteredWindow:(id)fp12;
- (void)morphingDragImage:(id)fp8 exitedWindow:(id)fp12;
- (void)willSelectTabViewItem;
- (void)didSelectTabViewItem;
- (void)tabBarViewDidRearrangeTabsWithOldSelectedTabIndex:(unsigned int)fp8;
- (void)updateTabTitlesSoon;
- (void)cancelUpdateTabTitlesSoon;
- (void)browserWebView:(id)fp8 willMoveToWindow:(id)fp12;
- (void)mainDocumentDidFirstVisuallyNonEmptyLayout;
- (void)updateProgressBar:(BOOL)fp8;
- (void)webViewSheetRequestStatusHasChanged:(id)fp8;
- (void)webViewStatusMessageHasChanged:(id)fp8;
- (void)webViewLocationFieldURLHasChanged:(id)fp8;
- (void)webViewLocationFieldIconHasChanged:(id)fp8;
- (void)webViewMainDocumentHasLoaded:(id)fp8;
- (void)webViewLoadingStatusHasChanged:(id)fp8;
- (void)webViewReloadabilityHasChanged:(id)fp8;
- (void)webViewProgressFinished:(id)fp8;
- (void)webViewNameHasChanged:(id)fp8;
- (void)webViewBannerHasChanged:(id)fp8;
- (void)webViewFormEditedStatusHasChanged:(id)fp8;
- (void)webViewBlockedFromKeyViewLoopHasChanged:(id)fp8;
- (void)webFrameLoadStarted:(id)fp8;
- (void)webFrameLoadCommitted:(id)fp8;
- (void)webViewMainDocumentDidFirstLayout:(id)fp8;
- (void)webFrameLoadFinished:(id)fp8 withError:(id)fp12;
- (void)webFrame:(id)fp8 willPerformClientRedirectToURL:(id)fp12;
- (void)dealloc;
- (BOOL)closeKeyEquivalentClosesTab;

@end

@interface WebViewPlus : WebView
{
    BOOL _bannerIsMovingIntoPlace;	// 84 = 0x54
    NSMutableArray *_currentBanners;	// 88 = 0x58
    NSMutableArray *_bannerActionQueue;	// 92 = 0x5c
}

- (void)dealloc;
- (void)close;
- (BOOL)maintainsInactiveSelection;
- (void)bannerDidInstall:(id)fp8;
- (void)bannerDidUninstall:(id)fp8;
- (void)bannerWillInstall:(id)fp8;
- (void)bannerWillUninstall:(id)fp8;
- (void)banner:(id)fp8 viewBelow:(id)fp12 wasResizedFromFrame:(struct _NSRect)fp16 animationProgress:(float)fp32 installing:(BOOL)fp36;
- (id)viewBelowBanner:(id)fp8;
- (id)currentBanners;
- (void)queueInstallOfBanner:(id)fp8 allowingAnimation:(BOOL)fp12;
- (void)queueUninstallOfBanner:(id)fp8 allowingAnimation:(BOOL)fp12;
- (id)currentURL;

@end

@interface SearchableWebView : WebViewPlus
{
    id _findInPageBanner;	// 96 = 0x60
}

- (id)findInPageBanner;
- (BOOL)isShowingFindInPageBanner;
- (BOOL)canFocusSearchField;
- (BOOL)canShowFindInPageBanner;
- (BOOL)canHideFindInPageBanner;
- (BOOL)canFindNext;
- (void)findNext;
- (BOOL)canFindPrevious;
- (void)findPrevious;
- (unsigned int)matchCountForString:(id)fp8 limit:(unsigned int)fp12;
- (BOOL)findBanner:(id)fp8 doSearchFieldCommandBySelector:(SEL)fp12;
- (void)findInPageBannerNeedsUpdateInRect:(struct _NSRect)fp8;
- (BOOL)currentPageIsSearchable;
- (void)showFindInPageBannerAllowingAnimation:(BOOL)fp8;
- (void)hideFindInPageBannerAllowingAnimation:(BOOL)fp8;
- (void)focusSearchField;
- (void)dealloc;
- (id)initWithFrame:(struct _NSRect)fp8 frameName:(id)fp24 groupName:(id)fp28;
- (void)close;
- (void)awakeFromNib;
- (void)viewDidMoveToWindow;
- (void)webView:(id)fp8 didDrawRect:(struct _NSRect)fp12;
- (void)webView:(id)fp8 didScrollDocumentInFrameView:(id)fp12;

@end

@interface BrowserWebView : SearchableWebView
{
    id _document;	// 100 = 0x64
    id _loadMonitor;	// 104 = 0x68
    NSURLRequest *_initialRequest;	// 108 = 0x6c
    BOOL _shouldStartEmpty;	// 112 = 0x70
    WebHistoryItem *_searchResultsForSnapBack;	// 116 = 0x74
    id bookmarksViewController;	// 120 = 0x78
    id bookmarksViewContents;	// 124 = 0x7c
    NSString *_statusText;	// 128 = 0x80
    NSString *_progressStatus;	// 132 = 0x84
    id _progressStatusOwner;	// 136 = 0x88
    BOOL _ellipsizeProgressStatus;	// 140 = 0x8c
    NSString *_generalStatus;	// 144 = 0x90
    id _generalStatusOwner;	// 148 = 0x94
    BOOL _ellipsizeGeneralStatus;	// 152 = 0x98
    NSString *_userDrivenStatus;	// 156 = 0x9c
    id _userStatusOwner;	// 160 = 0xa0
    BOOL _ellipsizeUserStatus;	// 164 = 0xa4
    NSString *_provisionalOriginalURLString;	// 168 = 0xa8
    NSString *_originalURLString;	// 172 = 0xac
    NSString *_pendingRSSFeedURLString;	// 176 = 0xb0
    WebHistoryItem *_pendingRSSFeedReferrer;	// 180 = 0xb4
    NSArray *_counterpartURLsForRSS;	// 184 = 0xb8
    NSString *_requestedTabLabel;	// 188 = 0xbc
    NSString *_provisionalTabLabel;	// 192 = 0xc0
    NSString *_committedTabLabel;	// 196 = 0xc4
    NSArray *_fallbackURLs;	// 200 = 0xc8
    id _locationChangeDelegate;	// 204 = 0xcc
    id _sheetRequest;	// 208 = 0xd0
    id _formDelegate;	// 212 = 0xd4
    double _redirectDelay;	// 216 = 0xd8
    float _cumulativeMagnifyDelta;	// 224 = 0xe0
    short _stickyTextMagnifyGestureDirection;	// 228 = 0xe4
    float _textSizeMultiplierAtGestureStart;	// 232 = 0xe8
    BOOL _isLoadingIgnoringQueue;	// 236 = 0xec
    BOOL _isLoadingConsideringQueue;	// 237 = 0xed
    BOOL _mainDocumentHasLoaded;	// 238 = 0xee
    BOOL _mainDocumentDidFirstLayout;	// 239 = 0xef
    BOOL _mainDocumentDidFirstVisuallyNonEmptyLayout;	// 240 = 0xf0
    BOOL _mainFrameLoadEndedInError;	// 241 = 0xf1
    BOOL _isWindowFocusDisabled;	// 242 = 0xf2
    BOOL _downloadNextPage;	// 243 = 0xf3
    int _cachedPageType;	// 244 = 0xf4
    int _oldPageType;	// 248 = 0xf8
    BOOL _isShowingRSS;	// 252 = 0xfc
    BOOL _hasDisplayedValidURL;	// 253 = 0xfd
    BOOL _registeredForNetworkConfigurationChanges;	// 254 = 0xfe
    BOOL _isMovingToAnotherWindow;	// 255 = 0xff
    BOOL _isSwitchingToBackgroundTab;	// 256 = 0x100
    BOOL _restoringTabForUndoClose;	// 257 = 0x101
    BOOL _blockedFromKeyViewLoop;	// 258 = 0x102
    NSURLRequest *_requestWaitingInQueue;	// 260 = 0x104
    NSMutableArray *_iPhotoFileWrappers;	// 264 = 0x108
    struct ProcessSerialNumber iPhotoPSN;	// 268 = 0x10c
    BOOL isObservingAppLaunches;	// 276 = 0x114
    NSDictionary *_parentalControlledElement;	// 280 = 0x118
    id _topSitesViewController;  
    id _animatingTopSitesView;	// 288 = 0x120
    id _topSitesZoomToPageFadeOutOverlay;	// 292 = 0x124
    NSViewAnimation *_topSitesZoomToPageFadeOutAnimation;	// 296 = 0x128
    id _webClipBanner;	// 300 = 0x12c
    BOOL _showingSecurityWarningPage;	// 304 = 0x130
    BOOL _loadingSecurityWarningPage;	// 305 = 0x131
    id _provisionalSecurityInfo;	// 308 = 0x134
    WebHistoryItem *_historyItemForTabCloseUndo;	// 312 = 0x138
    id _currentPageLoad;	// 316 = 0x13c
}

+ (void)initialize;
+ (void)closeWebViewSoon:(id)fp8;
+ (void)closeAllPendingWebViews;
- (id)windowController;
- (id)browserWindow;
- (id)initWithDocument:(id)fp8 request:(id)fp12 frameName:(id)fp16;
- (void)dealloc;
- (void)beginGestureWithEvent:(id)fp8;
- (void)magnifyWithEvent:(id)fp8;
- (void)goBack:(id)fp8;
- (void)goForward:(id)fp8;
- (id)sheetRequest;
- (void)setSheetRequest:(id)fp8;
- (void)showFindInPageBannerAllowingAnimation:(BOOL)fp8;
- (BOOL)isShowingWebClipBanner;
- (id)webClipBanner;
- (void)showWebClipBannerAllowingAnimation:(BOOL)fp8;
- (void)hideWebClipBannerAllowingAnimation:(BOOL)fp8;
- (BOOL)currentPageIsSearchable;
- (void)showCertificateSheet:(id)fp8;
- (BOOL)isShowingSecurityWarningPage;
- (id)provisionalSecurityInfo;
- (void)setProvisionalSecurityInfo:(id)fp8;
- (id)securityInfo;
- (void)setSecurityInfo:(id)fp8;
- (void)commitProvisionalSecurityInfo;
- (void)setUpSecurityWarningPage;
- (void)showSecurityWarningPageWithSecurityInfo:(id)fp8;
- (void)hideSecurityWarningPage;
- (void)updateSecurityWarningPageWithSecurityInfo:(id)fp8;
- (void)securityWarningPageLoaded;
- (void)securityWarningPageIgnoreWarningButtonPressed;
- (void)securityWarningPageBackButtonPressed;
- (void)securityWarningPageClosePageButtonPressed;
- (id)securityWarningPageLocalizedStringsURLString;
- (void)setUpSecurityWarningPageController;
- (void)bannerDidInstall:(id)fp8;
- (void)bannerDidUninstall:(id)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)close;
- (id)document;
- (id)loadMonitor;
- (id)undoManagerForWebView:(id)fp8;
- (void)webView:(id)fp8 setStatusText:(id)fp12;
- (id)webViewStatusText:(id)fp8;
- (void)webView:(id)fp8 mouseDidMoveOverElement:(id)fp12 modifierFlags:(unsigned int)fp16;
- (id)webView:(id)fp8 createWebViewWithRequest:(id)fp12 windowFeatures:(id)fp16;
- (void)webView:(id)fp8 frame:(id)fp12 exceededDatabaseQuotaForSecurityOrigin:(id)fp16 database:(id)fp20;
- (void)webViewRunModal:(id)fp8;
- (void)webViewClose:(id)fp8;
- (void)webViewShow:(id)fp8;
- (void)webViewFocus:(id)fp8;
- (id)webViewFirstResponder:(id)fp8;
- (void)webView:(id)fp8 makeFirstResponder:(id)fp12;
- (BOOL)webViewAreToolbarsVisible:(id)fp8;
- (void)webView:(id)fp8 setToolbarsVisible:(BOOL)fp12;
- (BOOL)webViewIsStatusBarVisible:(id)fp8;
- (void)webView:(id)fp8 setStatusBarVisible:(BOOL)fp12;
- (BOOL)webViewIsResizable:(id)fp8;
- (void)webView:(id)fp8 setResizable:(BOOL)fp12;
- (id)mainWebFrameView;
- (void)webView:(id)fp8 setFrame:(struct _NSRect)fp12;
- (struct _NSRect)webViewFrame:(id)fp8;
- (void)webView:(id)fp8 setContentRect:(struct _NSRect)fp12;
- (struct _NSRect)webViewContentRect:(id)fp8;
- (void)webView:(id)fp8 didScrollDocumentInFrameView:(id)fp12;
- (BOOL)_runJavaScriptPanelWithMessage:(id)fp8 initiatedByFrame:(id)fp12 hasCancelButton:(BOOL)fp16 allowAppTermination:(BOOL)fp20;
- (void)webView:(id)fp8 runJavaScriptAlertPanelWithMessage:(id)fp12 initiatedByFrame:(id)fp16;
- (BOOL)webView:(id)fp8 runJavaScriptConfirmPanelWithMessage:(id)fp12 initiatedByFrame:(id)fp16;
- (BOOL)webView:(id)fp8 runBeforeUnloadConfirmPanelWithMessage:(id)fp12 initiatedByFrame:(id)fp16;
- (BOOL)webViewShouldInterruptJavaScript:(id)fp8;
- (id)webView:(id)fp8 runJavaScriptTextInputPanelWithPrompt:(id)fp12 defaultText:(id)fp16 initiatedByFrame:(id)fp20;
- (void)webView:(id)fp8 runOpenPanelForFileButtonWithResultListener:(id)fp12 allowMultipleFiles:(BOOL)fp16;
- (void)webView:(id)fp8 saveFrameView:(id)fp12 showingPanel:(BOOL)fp16;
- (void)openPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (id)proposedBookmarkTitleForElement:(id)fp8;
- (BOOL)isMovingToAnotherWindow;
- (void)setMovingToAnotherWindow:(BOOL)fp8;
- (void)didMoveToDocument:(id)fp8;
- (void)willCloseWithUndo;
- (void)didReopenWithUndo;
- (BOOL)disallowCachingSnapshot;
- (BOOL)disallowCachingText;
- (void)newBookmarkSheetDidEnd:(BOOL)fp8;
- (BOOL)_handleErrorPageLink:(id)fp8 fromFrame:(id)fp12;
- (void)webView:(id)fp8 unableToImplementPolicyWithError:(id)fp12 frame:(id)fp16;
- (void)networkConfigurationDidChange:(id)fp8;
- (void)showErrorPageForURL:(id)fp8 withTitle:(id)fp12 message:(id)fp16 errorPageTemplate:(int)fp20;
- (void)webView:(id)fp8 decidePolicyForMIMEType:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;
- (BOOL)webView:(id)fp8 shouldGoToHistoryItem:(id)fp12;
- (void)webView:(id)fp8 decidePolicyForNavigationAction:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;
- (void)webView:(id)fp8 decidePolicyForNewWindowAction:(id)fp12 request:(id)fp16 newFrameName:(id)fp20 decisionListener:(id)fp24;
- (id)originalURLString;
- (void)setOriginalURLString:(id)fp8;
- (id)provisionalOriginalURLString;
- (void)setProvisionalOriginalURLString:(id)fp8;
- (id)pendingRSSFeedURLString;
- (id)pendingRSSFeedReferrer;
- (void)setPendingRSSFeedURLString:(id)fp8 withReferrer:(id)fp12;
- (id)provisionalTabLabel;
- (void)setProvisionalTabLabel:(id)fp8;
- (id)committedTabLabel;
- (void)setCommittedTabLabel:(id)fp8;
- (id)requestedTabLabel;
- (void)setRequestedTabLabel:(id)fp8;
- (id)tabLabel;
- (id)statusMessage;
- (BOOL)ellipsizeStatusMessage;
- (void)setStatus:(id)fp8 withPriority:(int)fp12 ellipsize:(BOOL)fp16 owner:(id)fp20;
- (void)clearAllStatus;
- (id)currentURL;
- (id)provisionalURL;
- (id)expectedOrCurrentURL;
- (id)expectedOrCurrentOriginalURLString;
- (BOOL)isDisplayingCompleteNonRSSPage;
- (BOOL)isDisplayingNonRSSPage;
- (BOOL)isShowingBookmarks;
- (BOOL)isShowingSecurePage;
- (BOOL)isShowingTopSites;
- (BOOL)isShowingTopSitesWall;
- (BOOL)isShowingFullWindowCoverFlow;
- (BOOL)isDisposable;
- (void)hideBookmarks;
- (void)showBookmarks;
- (id)currentTopSitesView;
- (struct TopSitesViewController *)topSitesViewController;
- (BOOL)canShowTopSitesWall;
- (void)showTopSitesWall:(id)fp8;
- (void)topSitesViewWillBecomeSubview:(id)fp8;
- (void)topSitesZoomToPageAnimationDidEnd;
- (void)topSitesZoomToPageAnimationWillStart;
- (void)topSitesSnapshotFetchingStatusHasChanged;
- (void)topSitesModeHasChanged;
- (id)bookmarksViewContents;
- (id)bookmarksViewController;
- (id)locationFieldURL;
- (id)titleForLocationFieldURL;
- (id)URLForNewBookmark;
- (id)titleForNewBookmark;
- (id)currentTitle;
- (id)failedOrCurrentURL;
- (id)pageNameURL;
- (id)pageName;
- (id)displayName;
- (id)fallbackURLs;
- (void)clearFallbackURLs;
- (void)goToNextFallbackURL;
- (BOOL)isLoading;
- (BOOL)isShowingLoadErrorPage;
- (BOOL)locationFieldShouldDisplayProgressIndicator;
- (BOOL)tabShouldDisplayProgressIndicator;
- (BOOL)containsEditedForm;
- (void)setMainFrameLoadEndedInError:(BOOL)fp8;
- (BOOL)mainFrameLoadEndedInError;
- (void)setMainDocumentHasLoaded:(BOOL)fp8;
- (BOOL)mainDocumentHasLoaded;
- (void)setMainDocumentDidFirstLayout:(BOOL)fp8;
- (BOOL)mainDocumentDidFirstLayout;
- (void)setMainDocumentDidFirstVisuallyNonEmptyLayout:(BOOL)fp8;
- (BOOL)mainDocumentDidFirstVisuallyNonEmptyLayout;
- (void)progressStarted:(id)fp8;
- (void)progressChanged:(id)fp8;
- (void)progressFinished:(id)fp8;
- (void)setPendingRedirectDelay:(double)fp8;
- (void)cancelPendingRedirect;
- (double)pendingRedirectDelay;
- (unsigned int)draggingUpdated:(id)fp8;
- (BOOL)canMakeTextSmaller;
- (BOOL)canMakeTextLarger;
- (BOOL)canMakeTextStandardSize;
- (BOOL)canZoomPageIn;
- (BOOL)canZoomPageOut;
- (BOOL)canResetPageZoom;
- (BOOL)canZoomIn;
- (BOOL)canZoomOut;
- (BOOL)canZoomToStandardSize;
- (void)zoomIn:(id)fp8;
- (void)zoomOut:(id)fp8;
- (void)zoomToStandardSize:(id)fp8;
- (float)zoomMultiplier;
- (void)setZoomMultiplier:(float)fp8;
- (BOOL)isSwitchingToBackgroundTab;
- (void)setSwitchingToBackgroundTab:(BOOL)fp8;
- (BOOL)maintainsInactiveSelection;
- (BOOL)isShowingRSS;
- (id)counterpartURLsForRSS;
- (void)updateCounterpartURLsForRSS;
- (void)snapBackTo:(id)fp8;
- (void)animationDidEnd:(id)fp8;
- (void)reportErrorForBadFileWrapper:(id)fp8;
- (void)saveFileWrapperToDownloadsFolder:(id)fp8 originatingURL:(id)fp12;
- (void)setSearchResultsForSnapBack:(id)fp8;
- (void)setSearchResultsForSnapBackToCurrentPage;
- (void)clearSearchResultsForSnapBack;
- (BOOL)canSnapBackToSearchResults;
- (void)snapBackToSearchResults:(id)fp8;
- (id)searchResultsForSnapBack;
- (void)goNowIfInQueue;
- (void)stopLoading:(id)fp8;
- (void)_fetchSnapshots;
- (void)_promptToFetchRecentHistoryPreviews;
- (void)_confirmFetchWebpagePreviews:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (BOOL)_performSpecialReloadActions;
- (void)reload:(id)fp8;
- (void)reloadFromOrigin:(id)fp8;
- (BOOL)canReload;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)setAcceptsGenericIcon:(BOOL)fp8;
- (void)updateIcon;
- (void)nameHasChanged;
- (void)pageTitleHasChanged;
- (void)locationFieldURLHasChanged;
- (void)prepareForRSSAnimation;
- (void)currentURLHasChanged;
- (void)provisionalDataSourceLoadDidFail;
- (void)provisionalURLHasChanged;
- (void)pageLoadingStatusHasChanged;
- (void)dataSourceHasChanged:(id)fp8 forFrame:(id)fp12;
- (void)mainDataSourceHasChanged;
- (void)goToRequest:(id)fp8 withTabLabel:(id)fp12 allowJavaScript:(BOOL)fp16 waitInQueue:(BOOL)fp20;
- (void)goToURL:(id)fp8;
- (void)tryMultipleURLs:(id)fp8;
- (void)tryDownloadWithMultipleURLs:(id)fp8;
- (id)stringByEvaluatingJavaScriptFromString:(id)fp8;
- (BOOL)hasInitialContents;
- (void)displayInitialContents;
- (BOOL)shouldStartEmpty;
- (void)setShouldStartEmpty;
- (void)clearPageCache;
- (struct CGImage *)generateSnapshot;
- (BOOL)isWindowFocusDisabled;
- (void)setWindowFocusDisabled:(BOOL)fp8;
- (void)setBlockedFromKeyViewLoop:(BOOL)fp8;
- (BOOL)isBlockedFromKeyViewLoop;
- (void)setHoverFeedbackSuspended:(BOOL)fp8;
- (id)currentPageLoad;
- (void)setCurrentPageLoad:(id)fp8;

@end
